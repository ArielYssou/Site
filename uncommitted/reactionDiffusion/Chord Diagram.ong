<!DOCTYPE html>
<html><head>
    <!--Chord - Python wrapper around d3-chord

    This package enables the generation of Chord diagrams. They can be saved 
    directly to HTML files or displayed in a Jupyter Notebook output cell.

    Copyright 2020, Dr. Shahin Rostami
    http://shahinrostami.com
    https://github.com/shahinrostami/chord
    https://pypi.org/project/chord/
    -->
  	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>Chord Diagram</title>
    <!-- Google Fonts -->
    <script src="Chord%20Diagram_files/d3.js"></script>
    <style data-tippy-stylesheet="">.tippy-box[data-animation=fade][data-state=hidden]{opacity:0}[data-tippy-root]{max-width:calc(100vw - 10px)}.tippy-box{position:relative;background-color:#333;color:#fff;border-radius:4px;font-size:14px;line-height:1.4;outline:0;transition-property:transform,visibility,opacity}.tippy-box[data-placement^=top]>.tippy-arrow{bottom:0}.tippy-box[data-placement^=top]>.tippy-arrow:before{bottom:-7px;left:0;border-width:8px 8px 0;border-top-color:initial;transform-origin:center top}.tippy-box[data-placement^=bottom]>.tippy-arrow{top:0}.tippy-box[data-placement^=bottom]>.tippy-arrow:before{top:-7px;left:0;border-width:0 8px 8px;border-bottom-color:initial;transform-origin:center bottom}.tippy-box[data-placement^=left]>.tippy-arrow{right:0}.tippy-box[data-placement^=left]>.tippy-arrow:before{border-width:8px 0 8px 8px;border-left-color:initial;right:-7px;transform-origin:center left}.tippy-box[data-placement^=right]>.tippy-arrow{left:0}.tippy-box[data-placement^=right]>.tippy-arrow:before{left:-7px;border-width:8px 8px 8px 0;border-right-color:initial;transform-origin:center right}.tippy-box[data-inertia][data-state=visible]{transition-timing-function:cubic-bezier(.54,1.5,.38,1.11)}.tippy-arrow{width:16px;height:16px;color:#333}.tippy-arrow:before{content:"";position:absolute;border-color:transparent;border-style:solid}.tippy-content{position:relative;padding:5px 9px;z-index:1}</style><link href="Chord%20Diagram_files/css.css" rel="stylesheet" type="text/css">

    <style>
      .tippy-content {
        font-family: "Lato", sans-serif;
      }

      #chart-2aa83771 {

        font-size: 16px;
        font-family: "Lato", sans-serif;
        text-align: center;
        fill: #454545;
      }

      #chart-2aa83771 svg {
        max-width: 700px;
      }

      @media (min-width: 600px) {
				#chart-2aa83771{
					font-size: 20px;
				}
			}
    </style>
  </head>
  <body>
    <div id="chart-2aa83771" class="chord">
    <svg viewBox="0 0 700 700" preserveAspectRatio="xMinYMin meet"><g transform="translate(350,350)"><defs><linearGradient id="linkGrad-chart-2aa83771-3-4" gradientUnits="userSpaceOnUse" x1="-129.12327020357733" y1="240.53311849293013" x2="-261.58266876660934" y2="78.1249473659876"><stop offset="0%" stop-color="#984ea3"></stop><stop offset="100%" stop-color="#ff7f00"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-0-3" gradientUnits="userSpaceOnUse" x1="194.09222187958386" y1="-191.9823153466131" x2="106.79229989496567" y2="251.24570580040512"><stop offset="0%" stop-color="#e41a1c"></stop><stop offset="100%" stop-color="#984ea3"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-0-4" gradientUnits="userSpaceOnUse" x1="122.84355372383477" y1="-243.800043700774" x2="-241.17572549616602" y2="-127.91899558469798"><stop offset="0%" stop-color="#e41a1c"></stop><stop offset="100%" stop-color="#ff7f00"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-2-3" gradientUnits="userSpaceOnUse" x1="223.0809247533993" y1="157.36550133739033" x2="178.58605537703306" y2="206.48491670064254"><stop offset="0%" stop-color="#4daf4a"></stop><stop offset="100%" stop-color="#984ea3"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-3-5" gradientUnits="userSpaceOnUse" x1="17.684791124821178" y1="272.4265922461892" x2="-118.94441196676429" y2="-245.72591817283066"><stop offset="0%" stop-color="#984ea3"></stop><stop offset="100%" stop-color="#ffff33"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-0-2" gradientUnits="userSpaceOnUse" x1="238.56928260243902" y1="-132.71660558708388" x2="272.0649422902299" y2="22.575809545038698"><stop offset="0%" stop-color="#e41a1c"></stop><stop offset="100%" stop-color="#4daf4a"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-0-5" gradientUnits="userSpaceOnUse" x1="42.30210268725513" y1="-269.7026735281594" x2="-51.96311614861976" y2="-268.0090195499492"><stop offset="0%" stop-color="#e41a1c"></stop><stop offset="100%" stop-color="#ffff33"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-4-5" gradientUnits="userSpaceOnUse" x1="-192.95037263848596" y1="-193.1298881547582" x2="-146.74303807316957" y2="-230.20747333015996"><stop offset="0%" stop-color="#ff7f00"></stop><stop offset="100%" stop-color="#ffff33"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-2-4" gradientUnits="userSpaceOnUse" x1="249.28674615243236" y1="111.28844590851631" x2="-268.75828661388243" y2="-47.93728586778995"><stop offset="0%" stop-color="#4daf4a"></stop><stop offset="100%" stop-color="#ff7f00"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-5-5" gradientUnits="userSpaceOnUse" x1="-20.408127410890184" y1="-272.2361260662899" x2="-20.408127410890184" y2="-272.2361260662899"><stop offset="0%" stop-color="#ffff33"></stop><stop offset="100%" stop-color="#ffff33"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-2-5" gradientUnits="userSpaceOnUse" x1="263.520282707596" y1="71.31662219783483" x2="-96.18470687054057" y2="-255.49462257399506"><stop offset="0%" stop-color="#4daf4a"></stop><stop offset="100%" stop-color="#ffff33"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-1-4" gradientUnits="userSpaceOnUse" x1="267.5866379966272" y1="-54.09612893416679" x2="-261.34988123700185" y2="-78.90018743580414"><stop offset="0%" stop-color="#377eb8"></stop><stop offset="100%" stop-color="#ff7f00"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-5-1" gradientUnits="userSpaceOnUse" x1="-76.03899330698916" y1="-262.1966275466938" x2="263.5202827075959" y2="-71.31662219783495"><stop offset="0%" stop-color="#ffff33"></stop><stop offset="100%" stop-color="#377eb8"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-0-1" gradientUnits="userSpaceOnUse" x1="253.72553213014734" y1="-100.7588921399673" x2="259.4691865054455" y2="-84.88074725285065"><stop offset="0%" stop-color="#e41a1c"></stop><stop offset="100%" stop-color="#377eb8"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-1-2" gradientUnits="userSpaceOnUse" x1="271.3881606251135" y1="-29.62205719590676" x2="272.7003215743285" y2="-12.78806526640573"><stop offset="0%" stop-color="#377eb8"></stop><stop offset="100%" stop-color="#4daf4a"></stop></linearGradient><linearGradient id="linkGrad-chart-2aa83771-1-3" gradientUnits="userSpaceOnUse" x1="270.03104989562536" y1="-40.15261003056084" x2="150.39145535308154" y2="227.8407561363464"><stop offset="0%" stop-color="#377eb8"></stop><stop offset="100%" stop-color="#984ea3"></stop></linearGradient></defs><g class="group"><path style="fill: rgb(228, 26, 28);" d="M1.838807168919751e-14,-300.3A300.3,300.3,0,0,1,281.8778802167169,-103.56133759531203L258.8151445626219,-95.08813724660469A275.73,275.73,0,0,0,1.6883593096444985e-14,-275.73Z"></path><text class="titles" dy="-16"><textPath startOffset="50%" style="text-anchor: middle;" xlink:href="#arc-chart-2aa83771-0">Cobrança</textPath></text></g><g class="group"><path style="fill: rgb(55, 126, 184);" d="M282.89938255597133,-100.7374277488273A300.3,300.3,0,0,1,299.2714365192529,-24.83339049954277L274.7855917131322,-22.80156764048927A275.73,275.73,0,0,0,259.75306943775547,-92.4952745693778Z"></path><text class="titles" dy="-16"><textPath startOffset="50%" style="text-anchor: middle;" xlink:href="#arc-chart-2aa83771-1">Getnet</textPath></text></g><g class="group"><path style="fill: rgb(77, 175, 74);" d="M299.50480283824066,-21.83948435349583A300.3,300.3,0,0,1,223.56782433248748,200.4931867252302L205.27591143255668,184.08919872043865A275.73,275.73,0,0,0,274.9998644242028,-20.052617451846174Z"></path><text class="titles" dy="25"><textPath startOffset="50%" style="text-anchor: middle;" xlink:href="#arc-chart-2aa83771-2">Marketshare</textPath></text></g><g class="group"><path style="fill: rgb(152, 78, 163);" d="M221.5517475825356,202.71880313163956A300.3,300.3,0,0,1,-231.7621491137607,190.9617664302752L-212.79979145899847,175.33762190416175A275.73,275.73,0,0,0,203.42478641669177,186.13271923905089Z"></path><text class="titles" dy="25"><textPath startOffset="50%" style="text-anchor: middle;" xlink:href="#arc-chart-2aa83771-3">Produção</textPath></text></g><g class="group"><path style="fill: rgb(255, 127, 0);" d="M-233.66014694037298,188.63463555721495A300.3,300.3,0,0,1,-179.89577151937232,-240.45290888123978L-165.1770265768782,-220.7794890636838A275.73,275.73,0,0,0,-214.54249855434247,173.2008926479883Z"></path><text class="titles" dy="25"><textPath startOffset="50%" style="text-anchor: middle;" xlink:href="#arc-chart-2aa83771-4">Propostas</textPath></text></g><g class="group"><path style="fill: rgb(255, 255, 51);" d="M-177.48228779222475,-242.2398140686991A300.3,300.3,0,0,1,-3.002949950250241,-300.2849851251246L-2.7572540452297662,-275.7162136148871A275.73,275.73,0,0,0,-162.96100970013364,-222.42019291762372Z"></path><text class="titles" dy="-16"><textPath startOffset="50%" style="text-anchor: middle;" xlink:href="#arc-chart-2aa83771-5">Rentabilidade</textPath></text></g><path class="hiddenArcs" id="arc-chart-2aa83771-0" d="M1.838807168919751e-14 -300.3A300.3 300.3 0 0 1 281.8778802167169 -103.56133759531203" style="fill: none;"></path><path class="hiddenArcs" id="arc-chart-2aa83771-1" d="M282.89938255597133 -100.7374277488273A300.3 300.3 0 0 1 299.2714365192529 -24.83339049954277" style="fill: none;"></path><path class="hiddenArcs" id="arc-chart-2aa83771-2" d="M223.56782433248748 200.4931867252302A300.3 300.3 0 0 0 299.50480283824066 -21.83948435349583" style="fill: none;"></path><path class="hiddenArcs" id="arc-chart-2aa83771-3" d="M-231.7621491137607 190.9617664302752A300.3 300.3 0 0 0 221.5517475825356 202.71880313163956" style="fill: none;"></path><path class="hiddenArcs" id="arc-chart-2aa83771-4" d="M-179.89577151937232 -240.45290888123978A300.3 300.3 0 0 0 -233.66014694037298 188.63463555721495" style="fill: none;"></path><path class="hiddenArcs" id="arc-chart-2aa83771-5" d="M-177.48228779222475 -242.2398140686991A300.3 300.3 0 0 1 -3.002949950250241 -300.2849851251246" style="fill: none;"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-3-4&quot;); opacity: 0.8;" d="M-28.264751771750365,271.53287794902724A273,273,0,0,1,-210.69286283069152,173.6016058457047Q0,0,-212.41831540033908,171.48603232474088A273,273,0,0,1,-271.67080696513455,-26.906739730271802Q0,0,-28.264751771750365,271.53287794902724Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-0-3&quot;); opacity: 0.8;" d="M159.13732362199906,-221.8204504332888A273,273,0,0,1,223.54652740793705,-156.7033824901443Q0,0,147.42495017312518,229.77137347035108A273,273,0,0,1,63.13314529503797,265.5997100246076Q0,0,159.13732362199906,-221.8204504332888Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-0-4&quot;); opacity: 0.8;" d="M83.58234571879444,-259.8903451152888A273,273,0,0,1,159.13732362199906,-221.8204504332888Q0,0,-258.08417744792627,-89.00313113046812A273,273,0,0,1,-218.44137534628214,-163.7448183510693Q0,0,83.58234571879444,-259.8903451152888Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-2-3&quot;); opacity: 0.8;" d="M239.88449817425965,130.32431674742674A273,273,0,0,1,203.2434766658977,182.26653338657292Q0,0,201.4106796204869,184.28982102876324A273,273,0,0,1,153.33268152254604,225.8718414878346Q0,0,239.88449817425965,130.32431674742674Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-3-5&quot;); opacity: 0.8;" d="M63.13314529503797,265.5997100246076A273,273,0,0,1,-28.264751771750365,271.53287794902724Q0,0,-131.5221051901455,-239.22988075562864A273,273,0,0,1,-106.04689575183721,-251.56123688159704Q0,0,63.13314529503797,265.5997100246076Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-0-2&quot;); opacity: 0.8;" d="M223.54652740793705,-156.7033824901443A273,273,0,0,1,251.02786010323558,-107.30337111195709Q0,0,272.9402066737691,-5.713456123939614A273,273,0,0,1,268.26548394236374,50.6224270967856Q0,0,223.54652740793705,-156.7033824901443Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-0-5&quot;); opacity: 0.8;" d="M1.671642880836137e-14,-273A273,273,0,0,1,83.58234571879444,-259.8903451152888Q0,0,-65.78594149792754,-264.95510921896044A273,273,0,0,1,-38.000570076145095,-270.34229538473625Q0,0,1.671642880836137e-14,-273Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-4-5&quot;); opacity: 0.8;" d="M-218.44137534628214,-163.7448183510693A273,273,0,0,1,-163.54161047215663,-218.59355352839978Q0,0,-161.34753435656796,-220.21801278972643A273,273,0,0,1,-131.5221051901455,-239.22988075562864Q0,0,-218.44137534628214,-163.7448183510693Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-2-4&quot;); opacity: 0.8;" d="M257.18125686906484,91.57947977166107A273,273,0,0,1,239.88449817425965,130.32431674742674Q0,0,-271.67080696513455,-26.906739730271802A273,273,0,0,1,-264.2202611391945,-68.67789748919134Q0,0,257.18125686906484,91.57947977166107Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-5-5&quot;); opacity: 0.8;" d="M-38.000570076145095,-270.34229538473625A273,273,0,0,1,-2.729954500227491,-272.9863501137496Q0,0,-38.000570076145095,-270.34229538473625Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-2-5&quot;); opacity: 0.8;" d="M268.26548394236374,50.6224270967856A273,273,0,0,1,257.18125686906484,91.57947977166107Q0,0,-106.04689575183721,-251.56123688159704A273,273,0,0,1,-86.17702677264651,-259.04154117945365Q0,0,268.26548394236374,50.6224270967856Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-1-4&quot;); opacity: 0.8;" d="M265.28072562394595,-64.46034914916838A273,273,0,0,1,269.48779261962017,-43.65008166091535Q0,0,-264.2202611391945,-68.67789748919134A273,273,0,0,1,-258.08417744792627,-89.00313113046812Q0,0,265.28072562394595,-64.46034914916838Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-5-1&quot;); opacity: 0.8;" d="M-86.17702677264651,-259.04154117945365A273,273,0,0,1,-65.78594149792754,-264.95510921896044Q0,0,261.5826687666095,-78.12494736598715A273,273,0,0,1,265.28072562394595,-64.46034914916838Q0,0,-86.17702677264651,-259.04154117945365Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-0-1&quot;); opacity: 0.8;" d="M251.02786010323558,-107.30337111195709A273,273,0,0,1,256.2526183788336,-94.14667054119275Q0,0,257.18125686906484,-91.57947977166118A273,273,0,0,1,261.5826687666095,-78.12494736598715Q0,0,251.02786010323558,-107.30337111195709Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-1-2&quot;); opacity: 0.8;" d="M270.52891817178727,-36.648389225209215A273,273,0,0,1,272.0649422902299,-22.57580954503888Q0,0,272.2770934893097,-19.85407668499621A273,273,0,0,1,272.9402066737691,-5.713456123939614Q0,0,270.52891817178727,-36.648389225209215Z"></path><path class="chord" style="fill: url(&quot;#linkGrad-chart-2aa83771-1-3&quot;); opacity: 0.8;" d="M269.48779261962017,-43.65008166091535A273,273,0,0,1,270.52891817178727,-36.648389225209215Q0,0,153.33268152254604,225.8718414878346A273,273,0,0,1,147.42495017312518,229.77137347035108Q0,0,269.48779261962017,-43.65008166091535Z"></path></g></svg><span style="display: block; font-size: 12px; text-align: right; font-family: &quot;Arial&quot;, sans-serif;">made with <a href="https://github.com/shahinrostami/chord">chord</a></span></div>
    <script src="Chord%20Diagram_files/core2.js"></script>
    <script src="Chord%20Diagram_files/tippy.js"></script>
    <script>
      var script = document.createElement("script");
      script.type = "text/javascript";
      script.src = "https://d3js.org/d3.v5.min.js";

      script.onload = function () {

        var script2 = document.createElement("script");
        script2.type = "text/javascript";
        script2.src = "https://shahinrostami.com/assets/chord/script.js";
        script2.onload = function () {
          margin = {
          left: 0,
          top: 0,
          right: 0,
          bottom: 0
        };
        width = Math.min(window.innerWidth, 700) - margin.left - margin.right;
        height = Math.min(window.innerWidth, 700) - margin.top - margin.bottom;
        innerRadius = Math.min(width, height) * 0.39;
        outerRadius = innerRadius * 1.1;

      tag_id = "chart-2aa83771";
      padding = 0.01;
      Names = ['Cobrança', 'Getnet', 'Marketshare', 'Produção', 'Propostas', 'Rentabilidade', 'Webmotors'];
      colors = d3.schemeSet1;
      opacityDefault = 0.8;
      matrix = [[0, 2, 8, 13, 12, 12, 4], [2, 0, 2, 1, 3, 2, 3], [8, 2, 0, 9, 6, 6, 3], [13, 1, 9, 0, 30, 13, 4], [12, 3, 6, 30, 0, 11, 5], [4, 3, 3, 4, 5, 5, 0]];
      wrap_labels = true;
      credit = false
      
      ////////////////////////////////////////////////////////////
      /////////// Create scale and layout functions //////////////
      ////////////////////////////////////////////////////////////

      var colors = d3
        .scaleOrdinal()
        .domain(d3.range(Names.length))
        .range(colors);

      //A "custom" d3 chord function that automatically sorts the order of the chords in such a manner to reduce overlap
      var chord = customChordLayout()
        .padding(padding)
        .sortChords(d3.descending) //which chord should be shown on top when chords cross. Now the biggest chord is at the bottom
        .matrix(matrix);

      var arc = d3
        .arc()
        .innerRadius(innerRadius * 1.01)
        .outerRadius(outerRadius);

      var path = d3.ribbon().radius(innerRadius);

      ////////////////////////////////////////////////////////////
      ////////////////////// Create SVG //////////////////////////
      ///////////////////////////////////////////////////////////

      var svg = d3
        .select("#" + tag_id)
        .append("svg")
        .attr(
          "viewBox",
          "0 0 " +
            (width + margin.left + margin.right) +
          " " +
          (height + margin.top + margin.bottom)
        )
        .attr("preserveAspectRatio", "xMinYMin meet")
        .append("g")
        .attr(
          "transform",
          "translate(" +
            (width / 2 + margin.left) +
            "," +
            (height / 2 + margin.top) +
            ")"
        );

      d3.select("#" + tag_id)
        .append("span")
        .style("display", "block")
        .style("font-size", "12px")
        .style("text-align", "right")
        .style("font-family", '"Arial", sans-serif')
        .html(
          'made with <a href="https://github.com/shahinrostami/chord">chord</a></span>'
        );

      if(credit){
      d3.select("#" + tag_id).select("span")
        .append("span")
        .style("font-size", "12px")
        .style("font-family", '"Arial", sans-serif')
        .html(
          ' [<a href="https://twitter.com/shahinrostami">@ShahinRostami</a>]</span>'
        );
      }

      ////////////////////////////////////////////////////////////
      /////////////// Create the gradient fills //////////////////
      ////////////////////////////////////////////////////////////

      //Function to create the id for each chord gradient
      function getGradID(d) {
        return (
          "linkGrad-" + tag_id + "-" + d.source.index + "-" + d.target.index
        );
      }




      //Create the gradients definitions for each chord
      var grads = svg
        .append("defs")
        .selectAll("linearGradient")
        .data(chord.chords())
        .enter()
        .append("linearGradient")
        .attr("id", getGradID)
        .attr("gradientUnits", "userSpaceOnUse")
        .attr("x1", function (d, i) {
          return (
            innerRadius *
            Math.cos(
              (d.source.endAngle - d.source.startAngle) / 2 +
                d.source.startAngle -
                Math.PI / 2
            )
          );
        })
        .attr("y1", function (d, i) {
          return (
            innerRadius *
            Math.sin(
              (d.source.endAngle - d.source.startAngle) / 2 +
                d.source.startAngle -
                Math.PI / 2
            )
          );
        })
        .attr("x2", function (d, i) {
          return (
            innerRadius *
            Math.cos(
              (d.target.endAngle - d.target.startAngle) / 2 +
                d.target.startAngle -
                Math.PI / 2
            )
          );
        })
        .attr("y2", function (d, i) {
          return (
            innerRadius *
            Math.sin(
              (d.target.endAngle - d.target.startAngle) / 2 +
                d.target.startAngle -
                Math.PI / 2
            )
          );
        });

      //Set the starting color (at 0%)
      grads
        .append("stop")
        .attr("offset", "0%")
        .attr("stop-color", function (d) {
          return colors(d.source.index);
        });

      //Set the ending color (at 100%)
      grads
        .append("stop")
        .attr("offset", "100%")
        .attr("stop-color", function (d) {
          return colors(d.target.index);
        });

      ////////////////////////////////////////////////////////////
      ////////////////// Draw outer Arcs /////////////////////////
      ////////////////////////////////////////////////////////////

      var outerArcs = svg
        .selectAll("g.group")
        .data(chord.groups)
        .enter()
        .append("g")
        .attr("class", "group")
        .on("mouseover", fade(0.1, 1))
        .on("mouseout", fade(opacityDefault, opacityDefault));

      outerArcs
        .append("path")
        .style("fill", function (d) {
          return colors(d.index);
        })
        .attr("d", arc)
        .each(function (d, i) {
          //Search pattern for everything between the start and the first capital L
          var firstArcSection = /(^.+?)L/;

          //Grab everything up to the first Line statement
          var newArc = firstArcSection.exec(d3.select(this).attr("d"))[1];
          //Replace all the comma's so that IE can handle it
          newArc = newArc.replace(/,/g, " ");

          //If the end angle lies beyond a quarter of a circle (90 degrees or pi/2)
          //flip the end and start position
          if (
            (d.endAngle > (90 * Math.PI) / 180) &
            (d.startAngle < (270 * Math.PI) / 180)
          ) {
            var startLoc = /M(.*?)A/, //Everything between the first capital M and first capital A
              middleLoc = /A(.*?)0 0 1/, //Everything between the first capital A and 0 0 1
              endLoc = /0 0 1 (.*?)$/; //Everything between the first 0 0 1 and the end of the string (denoted by $)
            //Flip the direction of the arc by switching the start en end point (and sweep flag)
            //of those elements that are below the horizontal line
            var newStart = endLoc.exec(newArc)[1];
            var newEnd = startLoc.exec(newArc)[1];
            var middleSec = middleLoc.exec(newArc)[1];

            //Build up the new arc notation, set the sweep-flag to 0
            newArc = "M" + newStart + "A" + middleSec + "0 0 0 " + newEnd;
          } //if

          //Create a new invisible arc that the text can flow along
          svg
            .append("path")
            .attr("class", "hiddenArcs")
            .attr("id", "arc-" + tag_id + "-" + i)
            .attr("d", newArc)
            .style("fill", "none");
     });
          ////////////////////////////////////////////////////////////
          ////////////////// Append Names ////////////////////////////
          ////////////////////////////////////////////////////////////

          //Append the label names on the outside

          if (wrap_labels) {
            outerArcs
              .append("text")
              .attr("class", "titles")
              .attr("dy", function (d, i) {
                return (d.endAngle > (90 * Math.PI) / 180) &
                  (d.startAngle < (270 * Math.PI) / 180)
                  ? 25
                  : -16;
              })
              .append("textPath")
              .attr("startOffset", "50%")
              .style("text-anchor", "middle")
              .attr("xlink:href", function (d, i) {
                return "#arc-" + tag_id + "-" + i;
              })
              .text(function (d, i) {
                return Names[i];
              });
          } else {
            //Append the label names on the outside
            outerArcs
              .append("text")
              .each(function (d) {
                d.angle = (d.startAngle + d.endAngle) / 2;
              })
              .attr("dy", ".35em")
              .attr("class", "titles")
              .attr("text-anchor", function (d) {
                return d.angle > Math.PI ? "end" : null;
              })
              .attr("transform", function (d) {
                return (
                  "rotate(" +
                  ((d.angle * 180) / Math.PI - 90) +
                  ")" +
                  "translate(" +
                  (outerRadius + 10) +
                  ")" +
                  (d.angle > Math.PI ? "rotate(180)" : "")
                );
              })
              .text(function (d, i) {
                return Names[i];
              });
          }

          ////////////////////////////////////////////////////////////
          ////////////////// Draw inner chords ///////////////////////
          ////////////////////////////////////////////////////////////

          svg
            .selectAll("path.chord")
            .data(chord.chords)
            .enter()
            .append("path")
            .attr("class", "chord")
            .style("fill", function (d) {
              return "url(#" + getGradID(d) + ")";
            })
            .style("opacity", opacityDefault)
            .attr("d", path)
            .on("mouseover", mouseoverChord())
            .on("mouseout", mouseoutChord(opacityDefault, opacityDefault));
   
      ////////////////////////////////////////////////////////////
      ////////////////// Extra Functions /////////////////////////
      ////////////////////////////////////////////////////////////

      //Returns an event handler for fading a given chord group.
      function fade(opacityIn, opacityOut) {
        return function (d, i) {
          d3.select(this.ownerSVGElement)
            .selectAll("path.chord")
            .filter(function (d) {
              return d.source.index !== i && d.target.index !== i;
            })
            .transition()
            .style("opacity", opacityIn);

          d3.select(this.ownerSVGElement)
            .selectAll("path.chord")
            .filter(function (d) {
              return d.source.index == i || d.target.index == i;
            })
            .transition()
            .style("opacity", opacityOut);

            
        };
      } //fade

      //Highlight hovered over chord
      function mouseoverChord() {
        return function (d, i) {

        d3.select(this.ownerSVGElement)
          .selectAll("path.chord")
          .transition()
          .style("opacity", 0.1);
        //Show hovered over chord with full opacity
        d3.select(this).transition().style("opacity", 1);

        tippy_content = "<span style='font-weight:900'>" +
            Names[d.source.index] +
            "</span> and <span style='font-weight:900'>" +
            Names[d.target.index] +
            "</span><br>occur together in <span style='font-weight:900'>" +
            d.source.value +
            "</span> instances";
   
        if(this._tippy == null)
        {
          tippy(this, {
            allowHTML: true,
            followCursor: true,
            content: tippy_content,
            size: "large",
            arrow: true,
          });
        }

      /*d3.select("#list")
        .html(
          details[d.source.index][d.target.index]
        );*/
      

        };
        
      } //fade

      //Bring all chords back to default opacity
      function mouseoutChord(opacityIn, opacityOut) {
        return function (d, i) {
        d3.select(this.ownerSVGElement)
          .selectAll("path.chord")
          .transition()
          .style("opacity", opacityOut);
        };
        //Set opacity back to default for all
      } //function mouseoutChord


        };
        document.body.appendChild(script2);
      };

      document.body.appendChild(script);
    </script><script type="text/javascript" src="Chord%20Diagram_files/d3.js"></script>
    <script></script>
  

<script type="text/javascript" src="Chord%20Diagram_files/script.js"></script></body></html>